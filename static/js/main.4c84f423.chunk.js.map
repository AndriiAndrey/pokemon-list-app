{"version":3,"sources":["components/navbar/Navbar.jsx","components/pokemon/AsideTabContent.jsx","components/pokemon/PokemonCard.js","assets/Select.jsx","api/api.js","store/store.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","grow","flexGrow","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","spacing","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Navbar","searchInputVal","setSearchInputVal","classes","className","AppBar","Toolbar","Typography","variant","noWrap","InputBase","fullWidth","placeholder","root","input","inputProps","value","onChange","event","target","AsideTabContent","pokemon","setIsOpen","name","toUpperCase","onClick","fontSize","src","sprites","front_shiny","alt","stats","map","item","stat","base_stat","LinearProgress","PokemonCard","useState","isOpen","Card","CardActionArea","CardMedia","component","front_default","CardContent","align","types","type","index","key","weight","abilities","ability","Drawer","anchor","open","onClose","transitionDuration","formControl","margin","minWidth","selectEmpty","marginTop","NativeSelects","setValue","label","isPages","FormControl","InputLabel","htmlFor","Select","native","id","tipe","getPokemon","url","Promise","resolve","reject","fetch","then","res","json","data","getPokemonList","offset","limit","StoreContext","createContext","StoreProvider","children","store","useLocalStore","pokemonData","loading","allPokemons","selectedType","buttonsDisable","Math","ceil","filter","includes","toLowerCase","setPokemonData","newData","setLoading","setAllPokemons","setLimit","setSelectedType","fetchData","a","response","count","loadPokemon","results","all","pokemonRecord","Provider","App","useContext","useEffect","useObserver","CircularProgress","disableShrink","Pagination","page","pagesCount","disabled","searchPokemonData","searchPokemonDataType","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c84f423.chunk.js","sourcesContent":["import React from 'react'\nimport { fade, makeStyles, createStyles } from '@material-ui/core/styles'\nimport { AppBar, Toolbar, Typography, InputBase } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    grow: {\n      flexGrow: 1\n    },\n    title: {\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block'\n      }\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto'\n      }\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    inputRoot: {\n      color: 'inherit'\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '20ch'\n      }\n    }\n  })\n)\n\nconst Navbar = ({ searchInputVal, setSearchInputVal }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Pokedex\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              fullWidth={true}\n              placeholder=\"Filter…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              value={searchInputVal}\n              onChange={(event) => setSearchInputVal(event.target.value)}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { LinearProgress } from '@material-ui/core'\n\nexport default function AsideTabContent ({ pokemon, setIsOpen }) {\n  return (\n    <>\n      <div className='aside-tab-header'>\n        <div className=\"header-text\">\n          { pokemon.name.toUpperCase() }\n        </div>\n        <span className=\"close-aside-tab\" onClick={() => setIsOpen(false)}>\n          <CloseIcon fontSize=\"large\" />\n        </span>\n      </div>\n      <div className=\"aside-tab-body\">\n        <img src={pokemon.sprites.front_shiny} alt={pokemon.name} />\n        <ul>\n          <h4>Pokemon stats:</h4>\n          {pokemon.stats.map(item => (\n            <li>\n              {item.stat.name}: {item.base_stat}\n              <LinearProgress\n                value={item.base_stat} variant='buffer'\n                color='secondary'\n              />\n            </li>\n          )\n          )}\n        </ul>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Card, CardActionArea, CardContent, CardMedia, Typography, Drawer } from '@material-ui/core'\nimport AsideTabContent from './AsideTabContent'\n\nfunction PokemonCard ({ pokemon }) {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const list = () => (\n    <div className='aside-tab-container'>\n      <AsideTabContent pokemon={pokemon} setIsOpen={setIsOpen} />\n    </div>\n  )\n\n  return (\n    <>\n      <Card onClick={() => setIsOpen(true)} className=\"card-item\">\n        <CardActionArea>\n          <CardMedia\n            className=\"card-picture\"\n            component=\"img\"\n            alt={pokemon.name}\n            src={pokemon.sprites.front_default}\n            title={pokemon.name}\n          />\n          <CardContent className=\"card-content\">\n            <Typography variant=\"h4\" component=\"h1\" align=\"center\">\n              {pokemon.name}\n            </Typography>\n            <Typography variant=\"h6\" color=\"primary\" component=\"h6\" className=\"pokemon-types-container\">\n              {pokemon.types.map((type, index) => {\n                return (\n                  <span key={index} >\n                    {type.type.name}\n                  </span>\n                )\n              })\n              }\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\n              <div>Weight: {pokemon.weight}</div>\n              <div>Height: {pokemon.height}</div>\n              <div>Ability: {pokemon.abilities[0].ability.name}</div>\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n      <Drawer\n        anchor='right' open={isOpen} onClose={() => setIsOpen(false)} transitionDuration={300}>\n        {list()}\n      </Drawer>\n    </>\n  )\n}\n\nexport default PokemonCard\n","import React from 'react'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { InputLabel, FormControl, Select } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    }\n  })\n)\n\nconst NativeSelects = ({ value, setValue, label, isPages }) => {\n  const classes = useStyles()\n\n  const pokemonTypes = [\n    'normal', 'fighting', 'flying', 'poison', 'ground', 'rock', 'bug', 'ghost',\n    'steel', 'fire', 'water', 'grass', 'electric', 'psychic', 'ice',\n    'dragon', 'dark', 'fairy'\n  ]\n\n  const handleChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  return (\n    <div>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel htmlFor={`outlined-${label}`}>{label}</InputLabel>\n        <Select\n          native\n          value={value}\n          onChange={handleChange}\n          label={label}\n          inputProps={{\n            id: `outlined-${label}`\n          }}\n        >\n          {isPages\n            ? <>\n              <option value={10}>Ten</option>\n              <option value={20}>Twenty</option>\n              <option value={50}>Fifty</option>\n            </>\n            : <>\n              <option value={''}></option>\n              {pokemonTypes.map(tipe =>\n                <option value={tipe}>{tipe}</option>\n              )}\n            </>\n          }\n        </Select>\n      </FormControl>\n    </div>\n  )\n}\n\nexport default NativeSelects\n","export const getPokemon = ({ url }) => {\n  return new Promise((resolve, reject) => {\n    fetch(url).then(res => res.json())\n      .then(data => {\n        resolve(data)\n      })\n  })\n}\n\nexport const getPokemonList = (offset = 0, limit = 10) => {\n  return new Promise((resolve, reject) => {\n    fetch(`https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=${limit}`)\n      .then(res => res.json())\n      .then(data => {\n        resolve(data)\n      })\n  })\n}\n","import React, { createContext } from 'react'\nimport { useLocalStore } from 'mobx-react-lite'\nimport { getPokemon, getPokemonList } from '../api/api'\n\nexport const StoreContext = createContext(null)\n\nconst StoreProvider = ({ children }) => {\n  const store = useLocalStore(() => ({\n    // data\n    pokemonData: [],\n    loading: true,\n    allPokemons: 0,\n    limit: 10,\n    searchInputVal: '',\n    selectedType: '',\n    buttonsDisable: false,\n    get pagesCount () {\n      return Math.ceil(store.allPokemons / store.limit)\n    },\n    get searchPokemonData () {\n      return store.pokemonData.filter(pokemon => {\n        return pokemon.name.includes(store.searchInputVal.toLowerCase())\n      })\n    },\n    get searchPokemonDataType () {\n      return store.pokemonData.filter(pokemon => {\n        const pokTypes = pokemon.types.map(type => {\n          return type.type.name\n        })\n        return pokTypes.includes(store.selectedType)\n      })\n    },\n    // callbacks\n    setPokemonData: (newData) => {\n      store.pokemonData = newData\n    },\n    setLoading: (newData) => {\n      store.loading = newData\n    },\n    setAllPokemons: (newData) => {\n      store.allPokemons = newData\n    },\n    setLimit: (newData) => {\n      store.limit = newData\n    },\n    setSearchInputVal: (newData) => {\n      store.searchInputVal = newData\n    },\n    setSelectedType: (newData) => {\n      store.selectedType = newData\n    },\n    fetchData: async (offset = 0, limit = 10) => {\n      store.buttonsDisable = true\n      const response = await getPokemonList(offset, limit)\n      store.setAllPokemons(response.count)\n      await store.loadPokemon(response.results)\n      store.setLoading(false)\n      store.buttonsDisable = false\n    },\n    loadPokemon: async (data) => {\n      const pokemonData = await Promise.all(data.map(async pokemon => {\n        const pokemonRecord = await getPokemon(pokemon)\n        return pokemonRecord\n      }))\n      store.setPokemonData(pokemonData)\n    }\n  }))\n\n  return (\n    <StoreContext.Provider value={store}>\n      {children}\n    </StoreContext.Provider>\n  )\n}\n\nexport default StoreProvider\n","import React, { useEffect, useContext } from 'react'\nimport Navbar from './components/navbar/Navbar'\nimport PokemonCard from './components/pokemon/PokemonCard'\nimport NativeSelects from './assets/Select'\nimport { StoreContext } from './store/store'\nimport { useObserver } from 'mobx-react-lite'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Pagination from '@material-ui/lab/Pagination'\n\nconst App = () => {\n  const store = useContext(StoreContext)\n\n  const getRightPokemonData = () => {\n    if (store.searchInputVal && store.selectedType) {\n      const searchTypeData = store.searchPokemonData.filter(pokemon => {\n        const pokTypes = pokemon.types.map(type => {\n          return type.type.name\n        })\n        return pokTypes.includes(store.selectedType)\n      })\n      return searchTypeData.map((pokemon, index) => {\n        return <PokemonCard key={index} pokemon={pokemon} />\n      })\n    } else if (store.searchInputVal && !store.selectedType) {\n      return store.searchPokemonData.map((pokemon, index) => {\n        return <PokemonCard key={index} pokemon={pokemon} />\n      })\n    } else if (store.selectedType && !store.searchInputVal) {\n      return store.searchPokemonDataType.map((pokemon, index) => {\n        return <PokemonCard key={index} pokemon={pokemon} />\n      })\n    } else {\n      return store.pokemonData.map((pokemon, index) => {\n        return <PokemonCard key={index} pokemon={pokemon} />\n      })\n    }\n  }\n\n  useEffect(() => {\n    store.fetchData()\n  }, [])\n\n  return useObserver(() => (\n    <>\n      <Navbar\n        searchInputVal={store.searchInputVal}\n        setSearchInputVal={store.setSearchInputVal}\n      />\n      <div className=\"main-app-container\">\n        {store.loading ? <CircularProgress disableShrink /> : (\n          <>\n            <div className=\"buttons-pagination\">\n              <Pagination\n                onChange={(event, page) => store.fetchData((page - 1) * store.limit, store.limit)}\n                count={store.pagesCount} color=\"secondary\" disabled={store.buttonsDisable}/>\n              <NativeSelects value={store.selectedType} setValue={store.setSelectedType} isPages={false} label={'Thype:'} />\n              <NativeSelects value={store.limit} setValue={store.setLimit} isPages={true} label={'Per-page:'} />\n            </div>\n            <div className=\"cards-container\">\n              {getRightPokemonData()}\n            </div>\n          </>\n        )}\n      </div>\n      <footer>\n        <p>&copy; 2020 Pokedex. All rights reserved...</p>\n      </footer>\n    </>\n  ))\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport StoreProvider from './store/store'\nimport 'mobx-react-lite/batchingForReactDom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}